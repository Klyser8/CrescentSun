import java.nio.charset.StandardCharsets

plugins {
    id 'java'
    alias(libs.plugins.java.library)
    alias(libs.plugins.maven.publish)
}

var author = 'Klyser8'
var apiVersion = 1.21
description = "Project for Crescent Sun Network"

def crescentcore_version = "1.1.0d"
def jumpwarps_version = "1.1.0b"
def artifacts_version = "1.1.0b"
def crystals_version = "1.1.0b"
def dropnames_version = "1.0.0b"

void addRepositories(Project project) {
    project.repositories {
        mavenCentral()
        maven {
            url = uri('https://repo.papermc.io/repository/maven-public/')
        }

        maven {
            url = uri('https://oss.sonatype.org/content/groups/public/')
        }

        maven {
            url = uri('https://repo.triumphteam.dev/snapshots/')
        }

        maven {
            url = uri('https://repo.maven.apache.org/maven2/')
        }

        maven {
            url = uri('http://84.217.92.154:25563/releases')
            allowInsecureProtocol = true
        }
    }
}

void assignVersions(Project project) {

}

subprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    addRepositories(project)

    if (project.name == "crescent-core") {
        project.version = crescentcore_version
    } else if (project.name == "jumpwarps") {
        project.version = jumpwarps_version
    } else if (project.name == "artifacts") {
        project.version = artifacts_version
    } else if (project.name == "crystals") {
        project.version = crystals_version
    } else if (project.name == "dropnames") {
        project.version = dropnames_version
    }

    project.group = "it.crescentsun"
    (project.extensions["java"] as JavaPluginExtension).sourceCompatibility = JavaVersion.VERSION_21
    project.tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
    }
    project.tasks.withType(Javadoc).configureEach {
        options.encoding = 'UTF-8'
    }

    project.dependencies {
        compileOnly libs.paper.api
    }

    afterEvaluate {
        project.tasks.processResources {
            filteringCharset = StandardCharsets.UTF_8.name()
            def props = [
                    "name"       : project.name,
                    "version"    : project.version,
                    "description": project.description ?: "No description provided",
                    "apiVersion" : apiVersion,
                    "author"     : author
            ]
            inputs.properties(props)
            filesMatching("plugin.yml") {
                expand(props)
            }
        }
    }

    if (project.name == "crescent-core") {
        return
    }

    project.publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
        repositories {
            maven {
                name = "KlyNet"
                url = uri("http://84.217.92.154:25563/releases")
                credentials(PasswordCredentials)
                authentication {
                    basic(BasicAuthentication)
                }
                allowInsecureProtocol = true
            }
        }
    }
}

tasks.register("buildAll") {
    group = 'build'
    description = 'Builds all subprojects'
    dependsOn(subprojects.collect { it.tasks.named("build") })
}

tasks.register("publishAll") {
    group = 'publish'
    description = 'Publishes all subprojects'
    dependsOn(subprojects.collect { it.tasks.named("publish") })
}

tasks.register("copyAllToRemote") {
    group = 'Custom'
    description = 'Copies all subprojects to the remote server - without flags.'
    dependsOn(subprojects.collect { it.tasks.named("copyJarToRemote") })
}